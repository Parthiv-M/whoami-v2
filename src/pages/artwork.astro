---
import Footer from "@components/common/Footer.astro";
import ArtLayout from "src/layouts/ArtLayout.astro";
import { artworks } from "./../utils/constants";
---

<ArtLayout title="Artworks">
    <div class="artworks-header">
        <a class="go-back flex" href="/">
            <img src="/assets/icons/arrow-right.svg" height="15px" width="12px"
                style="rotate:180deg; margin-right: 5px" />
            Back Home
        </a>
        <h1>ARTWORKS</h1>
        <p>Pictures speak louder than words</p>
    </div>
    <div style="padding: 10px">
        <div class="artwork-wrapper">
            <div class="artwork-mover">
                {
                artworks.slice(0,artworks.length / 3).map((artwork:any) => {
                return (<img class="artwork" height="300px" src={artwork} onclick={`window.open('${artwork}', '_blank'
                    );`} />)
                })
                }
            </div>
        </div>
        <div class="artwork-wrapper">
            <div class="artwork-mover">
                {
                artworks.slice(artworks.length / 3, artworks.length * (2 / 3)).map((artwork:any) => {
                return (<img class="artwork" height="300px" src={artwork} onclick={`window.open('${artwork}', '_blank'
                    );`} />)
                })
                }
            </div>
        </div>
        <div class="artwork-wrapper">
            <div class="artwork-mover">
                {
                artworks.slice(artworks.length * (2/ 3), undefined).map((artwork:any) => {
                return (<img class="artwork" height="300px" src={artwork} onclick={`window.open('${artwork}', '_blank'
                    );`} />)
                })
                }
            </div>
        </div>
    </div>
    <Footer />
</ArtLayout>

<style>
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin: 0;
        padding: 0;
    }

    .flex {
        display: flex;
    }

    .go-back {
        align-items: center;
        margin-bottom: 5px;
        width: fit-content;
        z-index: 10;
        text-decoration: none;
        color: var(--primary-light);
    }

    .go-back:hover {
        gap: 5px;
    }

    .artworks-header {
        padding: 30px;
    }

    .artworks-header h1 {
        font-family: 'Russo One', sans-serif;
        font-size: 3rem;
        letter-spacing: 0.3rem;
    }

    .artworks-header p {
        letter-spacing: 0.1rem;
        color: var(--primary-colour);
        font-weight: bold;
    }

    .artwork-wrapper {
        overflow-x: scroll;
        overflow-y: hidden;
        scroll-behavior: smooth;
    }

    /* Works on Chrome, Edge, and Safari */
    .artwork-wrapper::-webkit-scrollbar {
        display: none;
    }

    .artwork-mover {
        padding: 5px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .artwork {
        border-radius: 5px;
        opacity: 0.6;
    }

    .artwork:hover {
        opacity: 1;
        transform: scale(1.1);
        z-index: 10;
        cursor: pointer;
    }
</style>

<script>
    let numberOfArtworks: number = document?.querySelectorAll(".artwork")?.length;
    let numberOfPixelsToMove: number = (numberOfArtworks - 4) * 300;

    // extra scroll given to every wrapper so that even on manually scrolling 
    // back to a previous position, it keeps scrolling forward until numberOfPixelsToMove 
    // is reached

    for (let i = 0; i < numberOfPixelsToMove; i++) {
        setTimeout(() => {
            document?.querySelectorAll(".artwork-wrapper")[0]?.scrollBy(i, 0);
        }, 1500 * i)
    }

    for (let i = 0; i < numberOfPixelsToMove; i++) {
        setTimeout(() => {
            document?.querySelectorAll(".artwork-wrapper")[1]?.scrollBy(i, 0);
        }, 1500 * i)
    }

    for (let i = 0; i < numberOfPixelsToMove; i++) {
        setTimeout(() => {
            document?.querySelectorAll(".artwork-wrapper")[2]?.scrollBy(i, 0);
        }, 1500 * i)
    }
</script>