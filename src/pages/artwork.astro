---
import ArtLayout from "src/layouts/ArtLayout.astro";
import { artworks } from "./../utils/constants";
---

<ArtLayout title="Artworks">
    <div class="artwork-wrapper">
        <div class="overlay">
            <div class="art-back">
                <div class="artworks-header">
                    <a class="go-back flex" href="/">
                        <img alt="Right arrow" src="/assets/icons/arrow-right.svg" height="15px" width="12px"
                            style="rotate:180deg; margin-right: 5px" />
                        Back Home
                    </a>
                    <h1>ARTWORKS</h1>
                    <p>
                        I engross myself in sketching, painting, or even doodling out characters, places, people,
                        or objects. It has been a hobby of mine ever since I remember.
                    </p>
                    <div style="text-align: right; margin-right: 10px">
                        <img alt="theProton" class="theProton" src="/assets/images/theProtonVector.png" />
                    </div>  
                </div>
            </div>
            <div class="art-cards">
                <div class="swipey-cards">
                    {
                    artworks.map((artwork: string) => {
                        return (
                            <div class="swipey-card">
                                <img alt="Artwork" src={artwork} />
                                <p class="by-line">Parthiv Menon</p>
                            </div>
                        )
                    })
                    }
                    <div class="swipey-card refresh-card">
                        <div class="go-see-again">
                            <p> While I work on newer sketches, why don't you go see the older ones again?</p>
                        </div>
                        <div class="refresh-button">
                            <img alt="Refresh list" src="/assets/icons/reload.svg" height="15" width="15"/>See it again
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</ArtLayout>

<style>
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin: 0;
        padding: 0;
    }

    .flex {
        display: flex;
    }

    .go-back {
        align-items: center;
        margin-bottom: 5px;
        width: fit-content;
        z-index: 10;
        text-decoration: none;
        color: var(--primary-light);
    }

    .go-back:hover {
        gap: 5px;
    }

    .artworks-header {
        padding: 50px;
        width: 60%;
    }

    .artworks-header h1 {
        font-family: 'Russo One', sans-serif;
        font-size: 3rem;
        letter-spacing: 0.3rem;
    }

    .artworks-header p {
        letter-spacing: 0.1rem;
        color: var(--primary-colour);
        font-weight: bold;
    }

    .theProton {
        height: 80px;
        margin-top: 20px;
    }

    .artwork-wrapper {
        background: url("/assets/images/artworks.png");
        background-position: center;
        background-repeat: no-repeat;
        background-size: 150%;
    }

    .art-back {
        height: 100vh;
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .overlay {
        display: grid;
        grid-template-columns: 50% 50%;
        height: 100%;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.9);
        backdrop-filter: blur(10px);
    }

    /* swipey cards styling */

    .art-cards {
        overflow: hidden;
        display: flex;
        flex-direction: column;
        position: relative;
        opacity: 0;
        transition: opacity 0.1s ease-in-out;
    }

    .loaded.art-cards {
        opacity: 1;
    }

    .swipey-cards {
        flex-grow: 1;
        padding-top: 10px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1;
    }

    .swipey-card {
        display: inline-block;
        max-width: 100%;
        background: #FFFFFF;
        padding-bottom: 10px;
        border-radius: 8px;
        overflow: hidden;
        position: absolute;
        will-change: transform;
        transition: all 0.3s ease-in-out;
        cursor: -webkit-grab;
        cursor: -moz-grab;
        cursor: grab;
    }

    .refresh-card {
        padding: 50px 0px;
        color: var(--tertiary-dark);
    }

    .go-see-again {
        width: 60%;
        margin: 20px auto;
        font-weight: bold;
    }

    .refresh-button {
        width: fit-content;
        background-color: var(--primary-colour);
        color: var(--primary-light);
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 5px;
        padding: 10px 15px;
        margin: 0 auto;
        border-radius: 20px;
    }

    .moving.swipey-card {
        transition: none;
        cursor: -webkit-grabbing;
        cursor: -moz-grabbing;
        cursor: grabbing;
    }

    .swipey-card img {
        max-width: 550px;
        pointer-events: none;
    }

    .by-line {
        color: var(--primary-dark);
        font-family: "Russo One", sans-serif;
        font-weight: bold;
        text-align: right;
        margin-right: 10px;
    }

    @media only screen and (max-width: 1224px) {
        .swipey-card {
            max-width: 80%;
        }

        .swipey-card img {
            max-width: 400px;
        }
    }

    @media only screen and (max-width: 820px) {
        .artwork-wrapper {
            background-size: cover;
        }

        .overlay {
            grid-template-columns: 100%;
            padding-bottom: 2rem;
        }

        .art-back {
            padding: 50px 0;
            height: fit-content;            
        }

        .artworks-header h1 {
            font-size: 1.5rem;
        }

        .artworks-header p {
            font-size: 0.9rem;
        }

        .artworks-header {
            margin: 0 auto;
            padding: 0;
            width: 85%;
        }

        .art-cards {
            min-height: 65vh;
        }

        .swipey-card img {
            max-width: 350px;
        }

        .theProton {
            margin-top: 10px;
            height: 50px;
        }
    }
</style>

<script>
    import Hammer from "hammerjs";
    var artCards = document.querySelector('.art-cards');
    var allCards = document.querySelectorAll<HTMLElement>('.swipey-card');

    function initCards() {
        var newCards = document.querySelectorAll<HTMLElement>('.swipey-card:not(.removed)');

        newCards.forEach((card: HTMLElement, index: number) => {
            card.style.zIndex = (allCards.length - index).toString();
            card.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-' + 20 * index + 'px)';
            card.style.opacity = ((10 - index) / 10).toString();
        });

        artCards?.classList.add('loaded');
    }

    initCards();

    allCards.forEach((el: HTMLElement) => {
        var hammertime = new Hammer(el);

        hammertime.on('pan', function (event: any) {
            el.classList.add('moving');
        });

        hammertime.on('pan', function (event: any) {
            if (event.deltaX === 0) return;
            if (event.center.x === 0 && event.center.y === 0) return;

            var xMulti = event.deltaX * 0.03;
            var yMulti = event.deltaY / 80;
            var rotate = xMulti * yMulti;

            event.target.style.transform = 'translate(' + event.deltaX + 'px, ' + event.deltaY + 'px) rotate(' + rotate + 'deg)';
        });

        hammertime.on('panend', function (event: any) {
            el.classList.remove('moving');

            var moveOutWidth = document.body.clientWidth;
            var keep = Math.abs(event.deltaX) < 80 || Math.abs(event.velocityX) < 0.5;

            event.target.classList.toggle('removed', !keep);

            if (keep) {
                event.target.style.transform = '';
            } else {
                var endX = Math.max(Math.abs(event.velocityX) * moveOutWidth, moveOutWidth);
                var toX = event.deltaX > 0 ? endX : -endX;
                var endY = Math.abs(event.velocityY) * moveOutWidth;
                var toY = event.deltaY > 0 ? endY : -endY;
                var xMulti = event.deltaX * 0.03;
                var yMulti = event.deltaY / 80;
                var rotate = xMulti * yMulti;

                event.target.style.transform = 'translate(' + toX + 'px, ' + (toY + event.deltaY) + 'px) rotate(' + rotate + 'deg)';
                initCards();
            }
        });
    });

    const refresh = document.querySelector<HTMLElement>(".refresh-button");
    refresh?.addEventListener("click", () => {
        allCards?.forEach((element: HTMLElement) => {
            element?.classList.remove("removed");
            initCards();
        });
    });
</script>